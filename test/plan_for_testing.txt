1. Declaring primitive data types. Need to test type qualifiers as well
    a. int
    b. float
    c. bool
    d. char
    e. string

2. Basic arithmetic operators. Need to test for order of operations!
    a. +
    b. -
    c. *
    d. /
    e. %
    f. **

3. Logical operators
    a. &&
    b. |
    c. !

4. Equivalence operators
    c. ==
    d. !=
    e. <
    f. <= 
    g. >
    h. >=

5. Assignment operators with mutability check (ie. variables without mut should fail test a to f) //do we also want *=, /=, %=?
    a. :=
    b. ++
    c. --
    d. +=
    e. -=
    f. =
    g. mut

6. Control flow
    a. if, else if, else (also need to test for dangling else)
    b. while
    c. match

7. Non primitive data types
    a. set
    b. list
    c. tuple

8. cons operator for list
    a. Need to test if it works with match for pattern matching

9. Type expressions
    a. User defined types (ie. types, enums)

10. Functions
    a. Function definitions. Includes testing for recursive definition
    b. Function calls
    c. Binding functions to a type. This also involves testing the type application operation


